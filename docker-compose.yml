version: '3.8'

services:
  # Base de donn√©es MySQL
  mysql:
    image: mysql:8.0
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: stationSki
    ports:
      - "3306:3306"
    volumes:
      - stationSki:/var/lib/mysql
    networks:
      - backend_network

  # Application Spring Boot
  app-ski:
    depends_on:
      - mysql
    image: khairidinne/gestionski:latest
    restart: on-failure
    ports:
      - "8089:8089"
    environment:
      SPRING_APPLICATION_JSON: '{
        "spring.datasource.url": "jdbc:mysql://mysql:3306/stationSki?createDatabaseIfNotExist=true",
        "spring.datasource.username": "root",
        "spring.datasource.password": "root",
        "spring.jpa.hibernate.ddl-auto": "update"
      }'
    stdin_open: true
    tty: true
    networks:
      - backend_network

  # Prometheus
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - backend_network

  # Grafana
  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
    networks:
      - backend_network

volumes:
  stationSki:
  grafana-storage:

networks:
  backend_network:
    driver: bridge
